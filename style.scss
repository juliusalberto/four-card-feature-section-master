@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');

$colors: (
    red: hsl(0, 78%, 62%),
    cyan: hsl(180, 62%, 55%),
    orange: hsl(34, 97%, 64%),
    blue: hsl(212, 86%, 64%),
    very-dark-blue: hsl(234, 12%, 34%),
    grayish-blue: hsl(229, 6%, 66%),
    very-light-gray: hsl(0, 0%, 98%)
);

$fonts: (
    poppins: "Poppins"
);

@mixin font-style($family, $size, $weight, $line-height: normal) {
    font-family: map-get($fonts, $family);
    font-size: $size;
    font-weight: $weight;
    line-height: $line-height;
}

@mixin flexbox($direction: row, $justify: flex-start, $align: stretch) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
}

@mixin top-border($color, $height: 4px) {
    position: relative;

    &::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: $height;
        background-color: $color;
        border-top-left-radius: 8px;
        border-top-right-radius: 8px;
    }
}

%grid-item {
    border-radius: 8px;
    background: #FFF;
    box-shadow: 0px 15px 30px -11px rgba(131, 166, 210, 0.50);
    @include font-style(poppins, 13px, 400);
    line-height: 23px;
    letter-spacing: 0.09px;
    padding: 32px;
    color: map-get($map: $colors, $key: very-dark-blue);
    height: 250px;
    
    @include flexbox(column);

    h2 {
        @include font-style(poppins, 20px, 600);
        letter-spacing: normal;
        margin-bottom: 6px;
    }

    .img-container {
        flex: 1;
        display: grid;
        place-content: end;

        img {
            width: 64px;
            height: 64px;
        }
    }
}

* {
    box-sizing: border-box;
    padding: 0;
    margin: 0;
}

body {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    gap: 64px;
    height: 100vh;
    background-color: map-get($map: $colors, $key: very-light-gray);
    padding: 80px 165px;
}

.text-content {
    @include flexbox(column, center, center);
    color: map-get($map: $colors, $key: very-dark-blue);
    max-width: 540px;

    .thin {
        text-align: center;
        @include font-style(poppins, 36px, 300, normal);
        letter-spacing: 0.25px;
        margin-bottom: 3px;
    }

    .bold {
        text-align: center;
        @include font-style(poppins, 36px, 600, normal);
        margin-bottom: 13px;
    }

    p {
        text-align: center;
        @include font-style(poppins, 15px, 400, normal);
    }
}

.grid-container {
    flex: 1;
    display: grid;
    grid-template-rows: repeat(4, minmax(auto, calc(220px / 2)));
    grid-template-columns: repeat(3, minmax(auto, 350px));
    gap: 30px;
    align-items: center;
    justify-content: center;

    .grid-item-one {
        @include top-border(map-get($colors, cyan));
        @extend %grid-item;
        grid-row: 2 / 4;
        grid-column: 1 / 2;
    }

    .grid-item-two {
        @include top-border(map-get($colors, red));
        @extend %grid-item;
        grid-column: 2 / 3;
        grid-row: 1 / 3;
    }

    .grid-item-three {
        @include top-border(map-get($colors, orange));
        @extend %grid-item;
        grid-row: 3 / 5;
        grid-column: 2 / 3
    }

    .grid-item-four {
        @include top-border(map-get($colors, blue));
        @extend %grid-item;
        grid-row: 2 / 4;
        grid-column: 3 / 4;
    }

}

@media screen and (max-width: 768px) {
    body {
        padding: 78px 32px;
        height: auto;
    }

    .text-content {
        .thin, .bold {
            font-size: 24px;
        }

        p {
            font-size: 15px;
        }
    }

    %grid-item {
        height: 222px;
    }

    .grid-container {
        grid-template-columns: 1fr;
        grid-template-rows: repeat(4, 222px);
        gap: 25px;

        .grid-item-one, .grid-item-two, .grid-item-three, .grid-item-four {
            grid-column: 1 / 2;
        }

        .grid-item-one {
            grid-row: 1 / 2;
        }

        .grid-item-two {
            grid-row: 2 / 3;
        }

        .grid-item-three {
            grid-row: 3 / 4;
        }

        .grid-item-four {
            grid-row: 4 / 5;
        }
    }
}

